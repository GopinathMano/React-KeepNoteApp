{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\GOPINATH\\\\Documents\\\\GitHub\\\\React-KeepNoteApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\GOPINATH\\\\Documents\\\\GitHub\\\\React-KeepNoteApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\GOPINATH\\\\Documents\\\\GitHub\\\\React-KeepNoteApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Fab from\"@material-ui/core/Fab\";import Zoom from\"@material-ui/core/Zoom\";function CreateArea(props){var _useState=useState({title:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),clicked=_useState4[0],setClicked=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();setClicked(false);}function isClicked(){setClicked(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},clicked?/*#__PURE__*/React.createElement(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}):\"\",/*#__PURE__*/React.createElement(\"textarea\",{name:\"content\",onChange:handleChange,value:note.content,placeholder:\"Take a note...\",onClick:isClicked,rows:clicked?3:1}),/*#__PURE__*/React.createElement(Zoom,{in:clicked},/*#__PURE__*/React.createElement(Fab,{onClick:submitNote},\" \",/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["C:/Users/GOPINATH/Documents/GitHub/React-KeepNoteApp/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","clicked","setClicked","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","isClicked"],"mappings":"giBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,cAAwBL,QAAQ,CAAC,CAC/BM,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAIA,eAA8BT,QAAQ,CAAC,KAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAP,OAAO,CAAC,SAACQ,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBR,KAAK,CAACc,KAAN,CAAYX,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAM,KAAK,CAACO,cAAN,GACAT,UAAU,CAAC,KAAD,CAAV,CACD,CAED,QAASU,CAAAA,SAAT,EAAqB,CACnBV,UAAU,CAAC,IAAD,CAAV,CACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EACGD,OAAO,cACN,6BACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEE,YAFZ,CAGE,KAAK,CAAEJ,IAAI,CAACF,KAHd,CAIE,WAAW,CAAC,OAJd,EADM,CAQN,EATJ,cAWE,gCACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAEM,YAFZ,CAGE,KAAK,CAAEJ,IAAI,CAACD,OAHd,CAIE,WAAW,CAAC,gBAJd,CAKE,OAAO,CAAEc,SALX,CAME,IAAI,CAAEX,OAAO,CAAG,CAAH,CAAO,CANtB,EAXF,cAmBE,oBAAC,IAAD,EAAM,EAAE,CAAEA,OAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAEQ,UAAd,EACG,GADH,cAEE,oBAAC,OAAD,MAFF,CADF,CAnBF,CADF,CADF,CA8BD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nfunction CreateArea(props) {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n  const [clicked, setClicked] = useState(false);\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAdd(note);\r\n    setNote({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n    event.preventDefault();\r\n    setClicked(false);\r\n  }\r\n\r\n  function isClicked() {\r\n    setClicked(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        {clicked ? (\r\n          <input\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <textarea\r\n          name=\"content\"\r\n          onChange={handleChange}\r\n          value={note.content}\r\n          placeholder=\"Take a note...\"\r\n          onClick={isClicked}\r\n          rows={clicked ? 3 : 1}\r\n        />\r\n        <Zoom in={clicked}>\r\n          <Fab onClick={submitNote}>\r\n            {\" \"}\r\n            <AddIcon />\r\n          </Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}